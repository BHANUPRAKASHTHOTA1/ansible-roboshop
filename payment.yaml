- name: Configure payment components
  hosts: payment
  become: yes
  tasks:
  - name: Install python packages
    ansible.builtin.yum:
      name: "{{item}}"
      stae: installed
    loop:
    - python36
    - gcc
    - python3-devel

  - name: Check the user exists or not
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true

  - when: out.rc != 0
    name: create user roboshop
    become: yes
    ansible.builtin.user:
      name: roboshop

  - name: search the directory if exists
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download the file and unzip
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/payment.zip
      dest: /app
      remote_src: yes

  - name: Install dependencies
    ansible.builtin.command: pip3.6 install -r requirements.txt
    args:
      chdir: /app

  - name: copy payment service
    ansible.builtin.copy:
      src: payment.service
      dest: /etc/systemd/system/payment.service

  - name: deamon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: restart payment
    ansible.builtin.service:
      name: payment
      state: restarted
      enabled: true   